version: "3.8"

services:
  postgres:
    image: postgres:14.1-alpine
    container_name: mlflow_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes: 
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mlflow-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: mlflow_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - mlflow-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -c "
      mc alias set mlflow-minio http://minio:9000 minioadmin minioadmin;
      if ! mc ls mlflow-minio/mlflow-artifacts; then
        mc mb mlflow-minio/mlflow-artifacts;
      else
        echo 'Bucket already exists';
      fi
      "
    networks:
      - mlflow-net

  mlflow:
    build: 
      context: ./mlflow
      dockerfile: Dockerfile
    container_name: mlflow_server
    depends_on:
      postgres:
        condition: service_healthy
      minio-create-bucket:
        condition: service_completed_successfully
    ports:
      - "5000:5000"
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_S3_IGNORE_TLS: "true"
    command: [
      "mlflow", "server",
      "--backend-store-uri", "postgresql://mlflow:mlflow@postgres:5432/mlflowdb",
      "--artifacts-destination", "s3://mlflow-artifacts",
      # "--default-artifact-root", "s3://mlflow-artifacts",
      "--gunicorn-opts", "--log-level debug",
      "--host", "0.0.0.0"
    ]
    networks:
      - mlflow-net

volumes:
  pg_data:
  minio_data:

networks:
  mlflow-net:
    driver: bridge
